ext {
    def androidPluginVersion = '3.5.0'
    def mavenPluginVersion = '2.0'
    def kotlinVersion = '1.4.0'

    def coroutinesVersion = '1.3.5'
    def retrofitVersion = '2.8.1'
    def okhttpVersion = '3.14.7'
    def gsonVersion = '2.8.6'
    def junitVersion = '4.12'
    def mockkVersion = '1.10.0'
    def timberVersion = '4.7.1'
    def appCompatVersion = '1.1.0'
    def constraintlayoutVersion = '2.0.1'
    def recyclerviewVersion = '1.1.0'
    def koinVersion = '2.0.1'
    def lifecycleVersion = '2.2.0'
    def materialDialogsVersion = '3.3.0'
    def arrowVersion = '0.10.5'

    def androidxTestVersion = "1.2.0"

    def junitXVersion = "1.1.0"

    def archVersion = "2.0.0"

    def ktxVersion = "1.3.1"
    def espressoVersion = "3.2.0"
    def appCenterVersion = "3.0.0"
    def appCenterEspressoVersion = "1.4"

    configPlugins = [
            androidPlugin: "com.android.tools.build:gradle:${androidPluginVersion}",
            mavenPlugin  : "com.github.dcendents:android-maven-gradle-plugin:${mavenPluginVersion}",
            kotlinPlugin : "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    ]

    kotlin = [
            stdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"
    ]

    coroutines = [
            core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}",
            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}",
            test   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesVersion}"
    ]

    retrofit = [
            runtime : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            gson    : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            mock    : "com.squareup.retrofit2:retrofit-mock:${retrofitVersion}",
            scalars : "com.squareup.retrofit2:converter-scalars:${retrofitVersion}"
    ]

    okhttp = [
            okhttp       : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
            interceptor  : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}",
            mockWebServer: "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    ]

    gson = [
            gson: "com.google.code.gson:gson:${gsonVersion}"
    ]

    junit = [
            junit : "junit:junit:${junitVersion}",
            junitX: "androidx.test.ext:junit:${junitXVersion}"
    ]

    mockk = [
            mockk: "io.mockk:mockk:${mockkVersion}"
    ]

    timber = [
            timber: "com.jakewharton.timber:timber:${timberVersion}"
    ]

    support = [
            appCompat       : "androidx.appcompat:appcompat:${appCompatVersion}",
            constraintlayout: "androidx.constraintlayout:constraintlayout:${constraintlayoutVersion}",
            recyclerview    : "androidx.recyclerview:recyclerview:${recyclerviewVersion}",
            lifecycleViewModel : "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}",
            ktx                : "androidx.core:core-ktx:${ktxVersion}"
    ]

    koin = [
            viewModel: "org.koin:koin-android-viewmodel:${koinVersion}",
            android  : "org.koin:koin-android:${koinVersion}",
            core     : "org.koin:koin-core:${koinVersion}",
            test     : "org.koin:koin-test:${koinVersion}",
            ext      : "org.koin:koin-android-ext:${koinVersion}"
    ]

    materialDialogs = [
            core: "com.afollestad.material-dialogs:core:${materialDialogsVersion}"
    ]

    espresso = [
            core   : "androidx.test.espresso:espresso-core:${espressoVersion}",
            intents: "androidx.test.espresso:espresso-intents:${espressoVersion}",
            contrib: "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    ]

    androidxTest = [
            runner      : "androidx.test:runner:${androidxTestVersion}",
            rules       : "androidx.test:rules:${androidxTestVersion}",
            core        : "androidx.test:core:${androidxTestVersion}",
            orchestrator: "androidx.test:orchestrator:${androidxTestVersion}",
            truth       : "androidx.test.ext:truth:${androidxTestVersion}",
    ]

    appcenter = [
            analytics: "com.microsoft.appcenter:appcenter-analytics:${appCenterVersion}",
            crashes  : "com.microsoft.appcenter:appcenter-crashes:${appCenterVersion}",
            espresso : "com.microsoft.appcenter:espresso-test-extension:${appCenterEspressoVersion}"
    ]

    arch = [
            test: "androidx.arch.core:core-testing:${archVersion}"
    ]

    arrow = [
            core: "io.arrow-kt:arrow-core-data:${arrowVersion}"
    ]
}